<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bagStrap.mapper.ShopMapper">

	<select id="searchBookListSize" parameterType="hashmap" resultType="Integer">
		    SELECT CEIL(COUNT(*)/#{pageSize})
		    FROM TBL_BOOK B
		    LEFT JOIN 
		        (SELECT BOOK_ID, AVG(NVL(RATING, 0)) AS RATING 
		         FROM TBL_REVIEW 
		         GROUP BY BOOK_ID) R 
		    ON B.BOOK_ID = R.BOOK_ID
		    WHERE (#{keyword} IS NULL OR #{keyword} = '' OR TITLE LIKE '%' || #{keyword} || '%' OR AUTHOR LIKE '%' || #{keyword} || '%')
			<if test='category2 != "2000"'>
		    	AND TO_CHAR(B.CATEGORY) = #{category2} 
		    </if>		    		    
		    AND #{highPrice} >= PRICE 
		    AND NVL(R.RATING, 0) >= #{rating} 
		    <if test='category == "Sale"'>
		        AND B.DISCOUNT != 0
		    </if>
		
		    ORDER BY 
		    <choose>
		        <when test='category == "Sale"'>
		            B.DISCOUNT DESC, B.PRICE DESC 
		        </when>
		        <when test='category == "Best"'>
		            NVL(R.RATING, 0) DESC 
		        </when>
		        <when test='category == "New"'>
		            B.CREATED_AT DESC 
		        </when>
		        <otherwise>
		            B.BOOK_ID
		        </otherwise>
		    </choose>
	    </select>
	<select id="searchBookList" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT NVL(RATING, 0) AS RATING, B.*
		    FROM TBL_BOOK B
		    LEFT JOIN 
		        (SELECT BOOK_ID, AVG(NVL(RATING, 0)) AS RATING 
		         FROM TBL_REVIEW 
		         GROUP BY BOOK_ID) R 
		    ON B.BOOK_ID = R.BOOK_ID
		    WHERE (#{keyword} IS NULL OR #{keyword} = '' OR TITLE LIKE '%' || #{keyword} || '%' OR AUTHOR LIKE '%' || #{keyword} || '%') 
			<if test='category2 != "2000"'>
		    	AND TO_CHAR(B.CATEGORY) = #{category2} 
		    </if>		    
		    AND #{highPrice} >= PRICE 
		    AND NVL(R.RATING, 0) >= #{rating} 
		    <if test='category == "Sale"'>
		        AND B.DISCOUNT != 0
		    </if>
		
		    ORDER BY 
		    <choose>
		        <when test='category == "Sale"'>
		            B.DISCOUNT DESC, B.PRICE DESC 
		        </when>
		        <when test='category == "Best"'>
		            NVL(R.RATING, 0) DESC 
		        </when>
		        <when test='category == "New"'>
		            B.CREATED_AT DESC 
		        </when>
		        <otherwise>
		            B.BOOK_ID
		        </otherwise>
		    </choose>
		    
		    OFFSET #{currentPage}-1 ROWS FETCH FIRST #{pageSize} ROWS ONLY
	</select>


	<delete id="deleteCartItem" parameterType="hashmap">
		    DELETE FROM TBL_CART
		    WHERE BOOK_ID = #{bookId} AND USER_ID = #{userId}
	</delete>
	<insert id="insertCartItem" parameterType="hashmap">
		    INSERT INTO TBL_CART(USER_ID, BOOK_ID, QUANTITY)
			VALUES(#{userId}, #{bookId}, #{quantity})	
	</insert>
	<select id="selectCartItem" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT *
		    FROM TBL_CART
		    WHERE USER_ID = #{userId} AND BOOK_ID = #{bookId}
	</select>
	<update id="updateCartItem" parameterType="hashmap">
		    UPDATE TBL_CART
		    SET QUANTITY = QUANTITY + #{quantity}
		    WHERE USER_ID = #{userId} AND BOOK_ID = #{bookId}
	</update>
	<select id="selectBookCategory" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT NAME, BOARD_TYPE_ID    
			FROM TBL_STU_COMM_BOARD_TYPES
			WHERE PART = 2000
			ORDER BY BOARD_TYPE_ID
	</select>
	<update id="changeCartItem" parameterType="hashmap">
		    UPDATE TBL_CART
		    SET QUANTITY = #{quantity}
		    WHERE USER_ID = #{userId} AND BOOK_ID = #{bookId}
	</update>
	<select id="selectMaxPrice" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT 0 AS MIN, CEIL(MAX(PRICE)/10000)*10000 AS MAX
			FROM TBL_BOOK
	</select>
	<select id="selectBookDetail" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT *
			FROM
			   (SELECT * 
			    FROM 
			        (SELECT B.*, G.STUDY_NAME, TO_CHAR(G.STARTDATE, 'YYYY-MM-DD') AS STARTDATE, TO_CHAR(G.ENDDATE, 'YYYY-MM-DD') AS ENDDATE, STUDY_GROUP_ID
			        FROM TBL_STUDY_GROUP G
			        LEFT JOIN
			            (SELECT TITLE, PUBLISHER, BOOK_ID, DESCRIPTION, CATEGORY, IMAGE
			            FROM TBL_BOOK 
			            WHERE BOOK_ID = #{bookId}) B ON B.CATEGORY = g.subject_type_id
			        LEFT JOIN 
			            (SELECT BOOK_ID AS BID, AVG(NVL(RATING, 0)) AS RATING 
			            FROM TBL_REVIEW 
			            GROUP BY BOOK_ID) R ON B.BOOK_ID = R.BID
			        ORDER BY enddate)
			    ORDER BY  BOOK_ID)
			WHERE 5 > ROWNUM
	</select>
	<select id="selectreviewListCount" parameterType="hashmap" resultType="int">
		    SELECT CEIL(COUNT(*)/#{pageSize})
			FROM TBL_REVIEW 
			WHERE BOOK_ID = #{bookId}
			ORDER BY CREATED_AT DESC
	</select>
	<select id="selectreviewList" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT * 
			FROM TBL_REVIEW 
			WHERE BOOK_ID = #{bookId}
			ORDER BY CREATED_AT DESC
		    OFFSET #{currentPage}-1 ROWS FETCH FIRST #{pageSize} ROWS ONLY

	</select>
	<select id="selectRecommendedList" parameterType="hashmap" resultType="com.example.bagStrap.model.Order">
		    SELECT * FROM (
			    SELECT * FROM TBL_BOOK B
			    INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON B.CATEGORY = T.BOARD_TYPE_ID
			    WHERE B.CATEGORY = #{category}
			    ORDER BY DBMS_RANDOM.RANDOM
			) WHERE 5 > ROWNUM
	</select>
	

	
	
	
	
	
	<select id="searchItem" parameterType="hashmap" resultType="com.example.bagStrap.model.Item">
		SELECT * FROM TBL_ITEM
		INNER JOIN TBL_CODE ON CODE = CATEGORY1
		<if test="selectedCodes.size() != 0">
			WHERE CODE IN 
			<foreach collection="selectedCodes" item="item" open="(" close=")" separator=",">
			#{item}
			</foreach>
		</if>
	</select>
	<select id="searchCodes" parameterType="hashmap" resultType="com.example.bagStrap.model.Item">
		SELECT * FROM TBL_CODE
	</select>
</mapper>