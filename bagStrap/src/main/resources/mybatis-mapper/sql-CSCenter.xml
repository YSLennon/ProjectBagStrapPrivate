<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bagStrap.mapper.CSCenterMapper">
	
	<select id="searchList" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
		select s.*, c.*,u.*,b.*,
		 CASE
    		WHEN TRUNC(s.created_date) = TRUNC(SYSDATE) THEN TO_CHAR(s.created_date, 'HH24:MI:SS')
    		ELSE TO_CHAR(s.created_date, 'YYYY-MM-DD')
   			END AS createdDateFormatted,
   			NVL(c.cnt, 0) AS cnt
		from tbl_stu_comm s
		inner join tbl_user u on s.author=u.user_id
		LEFT JOIN (
		    SELECT post_id, COUNT(comment_id) AS cnt
		    FROM tbl_stu_comments
		    GROUP BY post_id
		) c ON s.board_id = c.post_id
		inner join tbl_stu_comm_board_types b on b.board_type_id=s.board_type
		WHERE 1=1
		<if test="category !='' and category !=null">
			and b.board_type_id= #{category}
		</if>
		<if test="searchOption == 'all'">
			and (s.title LIKE '%' || #{keyword} || '%'
			or u.user_nickname LIKE '%' || #{keyword} || '%')
		</if>
		<if test="searchOption == 'title'">
			and s.title LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption == 'name'">
			 and u.user_nickname LIKE '%' || #{keyword} || '%'
		</if>
		<!--where board_type=1002-->
		order by s.created_date desc
	</select>
	
	<select id="searchNotice" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
		SELECT n.*,u.*,
		    CASE
		        WHEN TRUNC(n.created_at) = TRUNC(SYSDATE) THEN TO_CHAR(n.created_at, 'HH24:MI:SS')
		        ELSE TO_CHAR(n.created_at, 'YYYY-MM-DD')
		    END AS createdDateFormatted
		FROM tbl_notice n
		inner join tbl_user u on n.author=u.user_id
		order by n.created_at desc, n.notice_id desc
		offset #{startIndex} rows FETCH FIRST #{outputNumber} ROWS only
	</select>
	
	<select id="CountNoticeList" parameterType="hashmap" resultType="int">
		select count(*) as cnt
		from tbl_notice
	</select>
	
	<select id="Noticeinfo" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
		select *
		from tbl_notice
		where notice_id = #{keyword}
	</select>
	
	<insert id="insertNotice" parameterType="hashmap" >
		 INSERT INTO TBL_NOTICE(NOTICE_ID,TITLE,CONTENT,AUTHOR,CREATED_AT)
		 VALUES(NOTICE_SEQ.NEXTVAL,#{title},#{content},#{userId},SYSDATE + (9/24))
	</insert>
	
	<select id="faqlist" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
		select *
		from tbl_faq
		where 1=1
		<if test="searchOption=='all'">
			and (question LIKE '%' || #{keyword} || '%')	
		</if>
		<if test="searchOption == 'title'">
			and question LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption == 'category'">
			and category LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<insert id="insertInquiry" parameterType="com.example.bagStrap.model.Notice">
	    INSERT INTO tbl_inquiry (inquiry_id, category, title, message, created_at, user_id)
	    VALUES (inquiry_seq.nextval, #{inqcategory}, #{inqTitle}, #{message}, SYSDATE + (9/24), #{userId})
	</insert>
	
	<select id="searchInqList" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
	    SELECT i.*, 
	        CASE
	            WHEN TRUNC(i.created_at) = TRUNC(SYSDATE) THEN TO_CHAR(i.created_at, 'HH24:MI:SS')
	            ELSE TO_CHAR(i.created_at, 'YYYY-MM-DD')
	        END AS createdDateFormatted
	    FROM tbl_inquiry i
	    WHERE user_id = #{userId}
	    order by i.created_at desc
	</select>
	
	<delete id="deleteInqBoard" parameterType="hashmap">
		DELETE 
		FROM TBL_INQUIRY
		WHERE INQUIRY_ID IN 
		<foreach collection="list" item="item" 
			open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteInq" parameterType="hashmap">
		DELETE 
		FROM tbl_inquiry
		WHERE inquiry_id = #{inquiryId}
	</delete>
	
	<select id="historyInq" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
	    SELECT i.*,u.*, 
	        CASE
	            WHEN TRUNC(i.created_at) = TRUNC(SYSDATE) THEN TO_CHAR(i.created_at, 'HH24:MI:SS')
	            ELSE TO_CHAR(i.created_at, 'YYYY-MM-DD')
	        END AS createdDateFormatted
	    FROM tbl_inquiry i
	    inner join tbl_user u on i.user_id=u.user_id
	    WHERE u.user_nickname != '0' 
	    order by i.created_at desc
	    offset #{startIndex} rows FETCH FIRST #{outputNumber} ROWS only
	</select>
	
	<update id="updateInq" parameterType="hashmap">
	    UPDATE tbl_inquiry
	    SET answer = #{answer}
	    WHERE inquiry_id = #{inquiryId}
	</update>
	
	<select id="CountInqList" parameterType="hashmap" resultType="int">
		select count(*) as cnt
		from tbl_inquiry
	</select>
	
	<insert id="insertInqAnswer" parameterType="hashmap">
		INSERT INTO tbl_answer (answer_id,inquiry_id, answer_message, created)
   		VALUES (answer_seq.nextval, #{inquiryId}, #{answerMessage}, SYSDATE + (9/24))
	</insert>
	
	<select id="Answerinfo" parameterType="hashmap" resultType="com.example.bagStrap.model.Notice">
		select a.*,i.*,
	        CASE
	            WHEN TRUNC(i.created_at) = TRUNC(SYSDATE) THEN TO_CHAR(i.created_at, 'HH24:MI:SS')
	            ELSE TO_CHAR(i.created_at, 'YYYY-MM-DD')
	        END AS createdDateFormatted,
			CASE
	            WHEN TRUNC(a.created) = TRUNC(SYSDATE) THEN TO_CHAR(a.created, 'HH24:MI:SS')
	            ELSE TO_CHAR(a.created, 'YYYY-MM-DD')
	        END AS DateFormatted
		from tbl_answer a
        inner join tbl_inquiry i on a.inquiry_id=i.inquiry_id
		where a.inquiry_id = #{keyword}
	</select>
</mapper>