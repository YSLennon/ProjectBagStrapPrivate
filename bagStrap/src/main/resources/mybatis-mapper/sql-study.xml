<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bagStrap.mapper.StudyMapper">
	
	<select id="searchItem" parameterType="hashmap" resultType="com.example.bagStrap.model.Item">
		SELECT * FROM TBL_ITEM
		INNER JOIN TBL_CODE ON CODE = CATEGORY1
		<if test="selectedCodes.size() != 0">
			WHERE CODE IN 
			<foreach collection="selectedCodes" item="item" open="(" close=")" separator=",">
			#{item}
			</foreach>
		</if>
	</select>
	<!-- -->
	<select id="searchCodes" parameterType="hashmap" resultType="com.example.bagStrap.model.Item">
		SELECT * FROM TBL_CODE
	</select>
	<!-- 스터디 커뮤니티 카테고리 타입-->
	<select id="selectStuComm" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
		SELECT * FROM TBL_STU_COMM_BOARD_TYPES
    ORDER BY BOARD_TYPE_ID
	</select>
	<!-- 스터디 커뮤니티 리스트 -->
	<select id="selectStuCommList" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
	SELECT *
	FROM TBL_STU_COMM
	ORDER BY CREATED_DATE DESC
	FETCH FIRST 5 ROWS ONLY
	</select>

		<!-- 스터디 컨텐츠 리스트 -->
	<select id="selectStuCommListBoard" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
    SELECT C.*, U.*, T.*,
    CASE 
        WHEN TO_CHAR(C.CREATED_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
        THEN TO_CHAR(C.CREATED_DATE, 'HH24:MI:SS')
        ELSE TO_CHAR(C.CREATED_DATE, 'YYYY-MM-DD')
    END AS CREATEDDATEFORMATTED  
    FROM TBL_STU_COMM C 
    LEFT JOIN TBL_USER U ON C.AUTHOR = U.USER_ID
    INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON T.BOARD_TYPE_ID = C.BOARD_TYPE
    WHERE 1=1
    <if test="boardTypeId !='' and boardTypeId != null">
        AND (BOARD_TYPE = #{boardTypeId} OR PART = #{boardTypeId} OR FULLVIEW = #{boardTypeId})
    </if>
    <if test="boardSearch == 'all'">
        AND (TITLE LIKE '%' || #{search} || '%' OR CONTENT LIKE '%' || #{search} || '%')      
    </if>
    <if test="boardSearch == 'title'">
        AND TITLE LIKE '%' || #{search} || '%'
    </if>
    <if test="boardSearch == 'author'">
        AND USER_NICKNAME LIKE '%' || #{search} || '%'
    </if>
     <if test="period == '1day'">
        AND C.CREATED_DATE >= SYSDATE - 1
    </if>
    <if test="period == '1week'">
        AND C.CREATED_DATE >= SYSDATE - 7
    </if>
    <if test="period == '1month'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -1)
    </if>
    <if test="period == '6months'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -6)
    </if>
    <if test="period == '1year'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -12)
    </if>
    ORDER BY C.CREATED_DATE DESC
    OFFSET #{startIndex} ROWS FETCH FIRST #{outputNumber} ROWS ONLY
	</select>
	
	
	<!-- 페이지 cnt-->
	<select id="countCommList" parameterType="hashmap" resultType="int">       
    SELECT COUNT(*) AS CNT 
    FROM TBL_STU_COMM C 
    LEFT JOIN TBL_USER U ON C.AUTHOR = U.USER_ID
    INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON T.BOARD_TYPE_ID = C.BOARD_TYPE
    WHERE 1=1
    <if test="boardTypeId !='' and boardTypeId != null">
        AND (BOARD_TYPE = #{boardTypeId} OR PART = #{boardTypeId} OR FULLVIEW = #{boardTypeId})
    </if>
    <if test="boardSearch == 'all'">
        AND (TITLE LIKE '%' || #{search} || '%' OR CONTENT LIKE '%' || #{search} || '%')      
    </if>
    <if test="boardSearch == 'title'">
        AND TITLE LIKE '%' || #{search} || '%'
    </if>
    <if test="boardSearch == 'author'">
        AND USER_NICKNAME LIKE '%' || #{search} || '%'
    </if>
     <if test="period == '1day'">
        AND C.CREATED_DATE >= SYSDATE - 1
    </if>
    <if test="period == '1week'">
        AND C.CREATED_DATE >= SYSDATE - 7
    </if>
    <if test="period == '1month'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -1)
    </if>
    <if test="period == '6months'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -6)
    </if>
    <if test="period == '1year'">
        AND C.CREATED_DATE >= ADD_MONTHS(SYSDATE, -12)
    </if>
    
	</select>
	<!-- 내가 쓴 게시글 개수-->
	<select id="countMyCommList" parameterType="hashmap" resultType="int">
		SELECT count(*) AS CNT3 FROM TBL_STU_COMM WHERE AUTHOR = #{userId}
	</select>
	<!-- 내가 쓴 댓글 개수 -->
	<select id="countMycommentList" parameterType="hashmap" resultType="int">
		SELECT count(*) AS CNT2 FROM TBL_STU_COMMENTS WHERE AUTHOR = #{userId}
	</select>
	<!-- 스터디 커뮤니티 게시글 상세보기-->
	<select id="selectCommView" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
		SELECT * FROM TBL_STU_COMM C
		LEFT JOIN TBL_USER U ON C.AUTHOR = U.USER_ID
		INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON T.BOARD_TYPE_ID = C.BOARD_TYPE
		WHERE BOARD_ID = #{boardId}
	</select>
		<!-- 스터디 커뮤니티 게시글 상세보기 댓글 리스트(boardId기준)-->
	<select id="selectViewComment" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
	 SELECT C.*,COM.*,U.*,COM.CONTENT AS COMCONTENTS, COM.CREATED_DATE AS COMCREATEDAY, COM.UPDATE_DATE AS COMUPDATEDAY FROM TBL_STU_COMM C
    INNER JOIN TBL_STU_COMMENTS COM ON C.BOARD_ID = COM.POST_ID
    INNER JOIN TBL_USER U ON U.USER_ID = COM.AUTHOR
    WHERE POST_ID =  #{boardId}
	</select>
	<!-- 스터디 커뮤니티 게시글 상세보기 댓글 작성-->
	<insert id="insertViewComment" parameterType="hashmap">
	INSERT INTO TBL_STU_COMMENTS (COMMENT_ID, POST_ID, CONTENT, AUTHOR, CREATED_DATE, UPDATE_DATE, PARENT_COMMENT_ID)
	VALUES (COMMENT_SEQ.NEXTVAL, #{boardId}, #{contents}, #{userId},SYSDATE + (9/24), NULL, NULL)
	</insert>
	<!-- 스터디 커뮤니티 나의 게시글-->
	<select id="selectMyComm" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
	SELECT *
    FROM TBL_STU_COMM C 
    LEFT JOIN TBL_USER U ON C.AUTHOR = U.USER_ID
    INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON T.BOARD_TYPE_ID = C.BOARD_TYPE
    WHERE C.AUTHOR = #{userId}
    ORDER BY C.created_Date DESC
    OFFSET #{startIndex} ROWS FETCH FIRST #{outputNumber} ROWS ONLY
	</select>
	<!-- 스터디 커뮤니티 나의 댓글-->
	<select id="selectMyComment" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
	SELECT COM.* FROM  TBL_STU_COMM C 
    LEFT JOIN TBL_USER U ON C.AUTHOR = U.USER_ID
    INNER JOIN TBL_STU_COMM_BOARD_TYPES T ON T.BOARD_TYPE_ID = C.BOARD_TYPE
    INNER JOIN TBL_STU_COMMENTS COM ON C.BOARD_ID = COM.POST_ID
    WHERE COM.AUTHOR = #{userId}
    ORDER BY com.created_Date DESC
    OFFSET #{startIndex} ROWS FETCH FIRST #{outputNumber} ROWS ONLY
	</select>
	<!-- 스터디 커뮤니티 게시글 작성하기 카테고리 불러오기-->
	<select id="selectMyCommCategory" parameterType="hashmap" resultType="com.example.bagStrap.model.StudyComm">
	SELECT * FROM tbl_stu_comm_board_types
	WHERE (board_type_id BETWEEN 1001 AND 1999) 
	OR (board_type_id BETWEEN 2001 AND 2999)
	OR (board_type_id BETWEEN 3001 AND 3999)
	OR (board_type_id BETWEEN 4001 AND 4999)
	ORDER BY board_type_id
	</select>
	<!-- 스터디 커뮤니티 게시글작성하기-->
	<insert id="insertComm" parameterType="hashmap" useGeneratedKeys="true" keyProperty="board_Id" keyColumn="board_Id">
	INSERT INTO TBL_STU_COMM 
    (BOARD_ID, BOARD_TYPE, TITLE, CONTENT, AUTHOR, CREATED_DATE, UPDATE_DATE, VIEWS, LIKES) 
    VALUES 
    (SEQ_BOARD_ID.NEXTVAL,#{boardTypeId}, #{title}, #{content}, #{userId}, SYSDATE, NULL, 0, 0)
	</insert>
	<!-- 스터디 커뮤니티 게시글 작성하기 이미지 첨부-->
	<insert id="insertBoardFile" parameterType="hashmap" >
		INSERT INTO TBL_BOADRFILE 
		VALUES(BOARDFILE_SEQ.NEXTVAL, #{idx},#{fileName},#{fileOrgName},#{filePath},#{fileSize},#{fileExt},'N')
	</insert>
</mapper>